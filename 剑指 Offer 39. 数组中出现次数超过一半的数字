class Solution {
public:
    int majorityElement(vector<int>& nums) {
      /* 
            unordered_map<int ,int> map;
            int half = nums.size()  / 2;
            for(int i = 0; i< nums.size();++i)
            {
                auto it = map.find(nums[i]);
                if(it != map.end())
                {
                    map[nums[i]]++;
                }
                else
                {
                    map.insert(make_pair(nums[i],1));
                }


                if(map[nums[i]] > half)
                {
                    return nums[i];
                }
            }
            return 0;
       */

      /*  sort(nums.begin(),nums.end());
        int tagrt = nums[nums.size() / 2];
        int count = 0;
        for(int i = 0;i<nums.size();++i)
        {
            if(tagrt == nums[i])
            {
                count++;
            }

        }
       if(count > nums.size() / 2)
       {
            return tagrt;
       }
        return 0;
        */

    int number = nums[0];
    int cand = 1;
    for(int i = 1; i< nums.size();++i)
    {
        if(cand == 0)
        {
            number = nums[i];
            cand = 1;
        }
        else if(nums[i] == number)
        {
            cand++;
        }
        else
        {
            cand--;
        }
    }
    int count = 0;
    for(int i = 0; i<nums.size();++i)
    {
        if(number == nums[i])
        {
            count++;
        }
    }
    return count > nums.size() / 2 ? number : 0;


    }

};
