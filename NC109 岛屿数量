class Solution {
public:
    /**
     * 判断岛屿数量
     * @param grid char字符型vector<vector<>> 
     * @return int整型
     */
    void  infect(vector<vector<char> >& grid,int i,int j,int N,int M)
    {
        if(i< 0 || i == N || j < 0|| j == M || grid[i][j] != '1')
            return;
        grid[i][j] = '2';
        infect(grid,i+1,j,N,M);
        infect(grid,i-1,j,N,M);
        infect(grid,i,j+1,N,M);
        infect(grid,i,j-1,N,M);
    }
    int solve(vector<vector<char> >& grid) {
        int N , M,ret = 0;
        N = grid.size();
        M = grid[0].size();
        for(int i = 0; i< N; ++i)
        {
            for(int j = 0; j< M; ++j)
            {
                if(grid[i][j] == '1')
                {
                    ++ret;
                    infect(grid,i,j,N,M);
                }
            }
        }
        return ret;
    }
};
